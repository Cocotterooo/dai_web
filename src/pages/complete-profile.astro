---
import AuthLayout from "../layouts/AuthLayout.astro";
import DAILogo from "../components/common/DAILogo.astro";
import DNINIEInput from "@/components/ui/DNI-NIE-input.astro";
import PhoneInput from "@/components/ui/phone-input.astro";
import Input from "@/components/ui/Input.astro";
import Button from "@/components/ui/Button.astro";

// Verificar que el usuario esté autenticado
const user = (Astro.locals as any).user;
const email = (Astro.locals as any).email;

if (!user) {
    return Astro.redirect("/auth");
}

// Verificar si ya tiene perfil completo
const hasPhone = user.user_metadata?.phone;
const hasDni = user.user_metadata?.dni;
const hasFullName = user.user_metadata?.full_name;

if (hasPhone && hasDni && hasFullName) {
    return Astro.redirect("/profile");
}

console.log('=== COMPLETAR PERFIL ===');
console.log('Usuario:', user.email);
console.log('Metadatos actuales:', user.user_metadata);

// Obtener parámetros de error si los hay
const url = new URL(Astro.request.url);
const errorParam = url.searchParams.get('error');
const messageParam = url.searchParams.get('message');

if (errorParam) {
    console.log('❌ Error detectado en URL:', errorParam, messageParam);
}
---

<AuthLayout title="Completar Perfil - DAI">
<main class="min-h-screen flex items-center justify-center p-6">
    <div class="w-full max-w-md">
    <div class="bg-white/10 backdrop-blur-xl border border-white/20 shadow-2xl rounded-2xl p-8">
        
        <!-- Header -->
        <div class="text-center mb-8">
        <h1 class="text-2xl font-bold text-white mb-2">
            Completa tu perfil
        </h1>
        <p class="text-white/70">
            Necesitamos algunos datos adicionales para completar tu registro
        </p>
        </div>

        <!-- Mensajes de error -->
        {errorParam && (
        <div class="mb-6 p-4 bg-red-500/20 border border-red-500/30 rounded-lg">
            <p class="text-red-200 text-sm">
                {messageParam ? decodeURIComponent(messageParam) : errorParam}
            </p>
        </div>
        )}

        <!-- Información del usuario actual -->
        <div class="mb-6 p-4 bg-green-500/20 border border-green-500/30 rounded-lg">
        <div class="flex items-center gap-3">
            {user.user_metadata?.avatar_url && (
            <img 
                src={user.user_metadata.avatar_url} 
                alt="Avatar" 
                class="w-10 h-10 rounded-full"
            />
            )}
            <div class="flex-1">
            <p class="text-green-200 text-sm font-medium">
                {hasFullName ? user.user_metadata.full_name : (user.user_metadata?.name || "Nombre por completar")}
            </p>
            <p class="text-green-200/80 text-xs">
                {user.email}
            </p>
            {!hasFullName && (
                <p class="text-yellow-200 text-xs mt-1">
                    ⚠️ Se requiere nombre completo
                </p>
            )}
            </div>
        </div>
        </div>

        <!-- Formulario de completar perfil -->
        <form action="/api/auth/complete-profile" method="post" class="space-y-4">
        
        <!-- Nombre completo -->
        <div>
            <label for="full_name" class="block text-sm font-medium text-white/90 mb-2">
                Nombre completo *
            </label>
            <Input
                type="text"
                name="full_name"
                id="full_name"
                placeholder="Nombre y apellido(s)"
                variant="auth"
                required
                className="text-white"
                value={user.user_metadata?.full_name || user.user_metadata?.name || ""}
            />
            <p class="text-white/60 text-xs mt-1">
                Debe incluir al menos un nombre y un apellido
            </p>
        </div>
        
        <!-- DNI/NIE solo si no lo tiene -->
        {!hasDni && (
            <DNINIEInput />
        )}

        <!-- Teléfono solo si no lo tiene -->
        {!hasPhone && (
            <PhoneInput />
        )}

        <Button
            type="submit"
            variant="primary"
            size="md"
            className="w-full"
        >
            Completar Perfil
        </Button>
        </form>

        <!-- Botón para completar después (opcional, solo para OAuth) -->
        {user.app_metadata?.provider && user.app_metadata?.provider !== 'email' && (
        <div class="mt-6">
            <a 
            href="/profile?skip_profile=true"
            class="w-full block text-center bg-white/10 border border-white/20 text-white py-3 px-4 rounded-lg font-medium hover:bg-white/20 hover:border-white/30 focus:outline-none focus:ring-1 focus:ring-dai focus:ring-offset-1 focus:ring-offset-transparent transition-all duration-300 backdrop-blur-sm"
            >
            <span class="flex items-center justify-center gap-2">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="opacity-70">
                    <path d="m9 18 6-6-6-6"/>
                </svg>
                Completar después
            </span>
            </a>
            <p class="text-xs text-white/60 mt-3 text-center leading-relaxed">
            Podrás acceder con funcionalidad limitada y completar tu perfil más tarde
            </p>
        </div>
        )}

        <!-- Texto del footer -->
        <div class="text-center text-white/60 text-sm mt-6">
        Estos datos son obligatorios para acceder a todos los servicios de DAI
        <br>
        </div>
    </div>
    </div>
</main>
</AuthLayout>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form');
    const fullNameInput = document.getElementById('full_name');
    
    if (form && fullNameInput) {
        // Validación en tiempo real
        fullNameInput.addEventListener('input', function() {
            validateFullName();
        });

        // Validación antes del envío
        form.addEventListener('submit', function(e) {
            if (!validateFullName()) {
                e.preventDefault();
            }
        });

        function validateFullName() {
            if (!fullNameInput) return false;
            
            const value = (fullNameInput as HTMLInputElement).value.trim();
            const errorDiv = document.getElementById('full_name_error');
            
            // Limpiar error anterior
            if (errorDiv) {
                errorDiv.remove();
            }

            let errorMessage = '';

            if (!value) {
                errorMessage = 'El nombre completo es obligatorio';
            } else {
                const words = value.split(/\s+/);
                if (words.length < 2) {
                    errorMessage = 'Debe incluir al menos un nombre y un apellido';
                } else if (!/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\s]+$/.test(value)) {
                    errorMessage = 'Solo se permiten letras y espacios';
                } else if (value.length < 3) {
                    errorMessage = 'El nombre debe tener al menos 3 caracteres';
                } else if (value.length > 100) {
                    errorMessage = 'El nombre no puede exceder 100 caracteres';
                }
            }

            if (errorMessage) {
                // Crear elemento de error
                const errorEl = document.createElement('p');
                errorEl.id = 'full_name_error';
                errorEl.className = 'text-red-400 text-xs mt-1';
                errorEl.textContent = errorMessage;
                
                // Insertar después del input
                const nextSibling = fullNameInput.nextSibling;
                if (fullNameInput.parentNode && nextSibling && nextSibling.nextSibling) {
                    fullNameInput.parentNode.insertBefore(errorEl, nextSibling.nextSibling);
                } else if (fullNameInput.parentNode) {
                    fullNameInput.parentNode.appendChild(errorEl);
                }
                
                // Cambiar estilo del input
                fullNameInput.classList.add('border-red-400', 'focus:ring-dai');
                fullNameInput.classList.remove('border-white/30', 'focus:ring-dai');
                
                return false;
            } else {
                // Restaurar estilo normal
                fullNameInput.classList.remove('border-red-400', 'focus:ring-dai');
                fullNameInput.classList.add('border-white/30', 'focus:ring-dai');
                return true;
            }
        }
    }
});
</script>
