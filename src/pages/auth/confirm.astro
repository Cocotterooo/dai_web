---
// P√°gina que maneja la confirmaci√≥n cuando el usuario hace clic en el enlace del email
import Layout from "../../layouts/Layout.astro";

// Obtener los par√°metros de la URL
const token_hash = Astro.url.searchParams.get("token_hash");
const type = Astro.url.searchParams.get("type");
const next = Astro.url.searchParams.get("next") || "/profile";

console.log('üîó === EMAIL CONFIRMATION CALLBACK ===');
console.log('   - URL completa:', Astro.url.href);
console.log('   - Token hash existe:', !!token_hash);
console.log('   - Token hash (primeros 20 chars):', token_hash ? token_hash.substring(0, 20) + '...' : 'N/A');
console.log('   - Type:', type);
console.log('   - Next:', next);
console.log('   - Timestamp:', new Date().toISOString());

// Si no hay token, redirigir a login
if (!token_hash || type !== "signup") {
    console.log('‚ùå Par√°metros faltantes o inv√°lidos');
    console.log('   - Esperado: type="signup", token_hash=[string]');
    console.log('   - Recibido: type="' + type + '", token_hash=' + (!!token_hash));
    return Astro.redirect("/auth?message=invalid_confirmation_link&error=" + encodeURIComponent("Faltan par√°metros en el enlace"));
}

// Procesar la confirmaci√≥n en el servidor
let confirmationResult: any = null;
let confirmationError: string | null = null;

try {
    console.log('üåê Haciendo petici√≥n a endpoint de confirmaci√≥n...');
    
    // Llamar al endpoint de confirmaci√≥n
    const baseUrl = Astro.url.origin;
    const confirmUrl = `${baseUrl}/api/auth/confirm-signup`;
    
    console.log('   - URL del endpoint:', confirmUrl);
    console.log('   - Payload:', { token_hash: token_hash.substring(0, 20) + '...', type });
    
    const confirmResponse = await fetch(confirmUrl, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            token_hash,
            type,
        }),
    });
    
    console.log('üìä Respuesta del endpoint:');
    console.log('   - Status:', confirmResponse.status);
    console.log('   - Status Text:', confirmResponse.statusText);
    console.log('   - Headers:', Object.fromEntries(confirmResponse.headers.entries()));
    
    const result = await confirmResponse.json();
    console.log('   - Result:', JSON.stringify(result, null, 2));
    
    if (confirmResponse.ok && result.success) {
        console.log('‚úÖ Confirmaci√≥n exitosa, redirigiendo al perfil...');
        return Astro.redirect("/auth/email-confirmed?message=email_confirmed");
    } else {
        const errorMsg = result.error || result.technical_error || 'Error desconocido';
        const errorCode = result.error_code || 'unknown';
        
        console.error('‚ùå Error en confirmaci√≥n:');
        console.error('   - Error message:', errorMsg);
        console.error('   - Error code:', errorCode);
        console.error('   - Technical error:', result.technical_error);
        
        confirmationError = errorMsg;
        
        // Redirigir con informaci√≥n espec√≠fica del error
        const errorParam = encodeURIComponent(errorMsg);
        const codeParam = encodeURIComponent(errorCode);
        return Astro.redirect(`/auth?message=confirmation_error&error=${errorParam}&code=${codeParam}`);
    }
    
} catch (error) {
    console.error('‚ùå Excepci√≥n procesando confirmaci√≥n:');
    console.error('   - Error:', error);
    console.error('   - Message:', error instanceof Error ? error.message : 'Unknown error');
    console.error('   - Stack:', error instanceof Error ? error.stack : 'No stack trace');
    
    const errorMsg = error instanceof Error ? error.message : 'Error interno del servidor';
    confirmationError = errorMsg;
    
    return Astro.redirect(`/auth?message=confirmation_error&error=${encodeURIComponent(errorMsg)}`);
}

return Astro.redirect(`/auth?message=confirmation_error&error=${encodeURIComponent(finalError)}`);
---

<!-- Esta p√°gina no deber√≠a renderizarse, siempre redirige -->
<Layout title="Confirmando...">
    <div class="min-h-screen flex items-center justify-center">
        <div class="text-center">
            <div class="animate-spin w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full mx-auto mb-4"></div>
            <p>Confirmando tu email...</p>
        </div>
    </div>
</Layout>
