---
import Layout from "../../layouts/Layout.astro";
import AuthLayout from "../../layouts/AuthLayout.astro";

// Obtener email desde query params si estÃ¡ disponible
const email = Astro.url.searchParams.get("email") || "";
---

<Layout title="Confirma tu Email - DAI">
    <AuthLayout>
        <div class="max-w-md mx-auto bg-white/90 backdrop-blur-sm rounded-2xl shadow-xl p-8 border border-blue-100">
            <!-- Icono de email -->
            <div class="text-center mb-6">
                <div class="mx-auto w-20 h-20 bg-blue-100 rounded-full flex items-center justify-center mb-4">
                    <svg class="w-10 h-10 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                              d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                    </svg>
                </div>
                <h1 class="text-2xl font-bold text-gray-800 mb-2">
                    Â¡Confirma tu email!
                </h1>
            </div>

            <!-- Mensaje principal -->
            <div class="text-center mb-8">
                <p class="text-gray-600 mb-4">
                    Hemos enviado un enlace de confirmaciÃ³n a:
                </p>
                {email && (
                    <p class="text-lg font-semibold text-blue-600 bg-blue-50 px-4 py-2 rounded-lg mb-4">
                        {email}
                    </p>
                )}
                <p class="text-gray-600 text-sm mb-6">
                    Por favor, revisa tu bandeja de entrada y haz clic en el enlace para activar tu cuenta.
                </p>
                
                <!-- Indicador de estado -->
                <div class="flex items-center justify-center space-x-2 text-amber-600 mb-6">
                    <div class="animate-spin w-5 h-5 border-2 border-amber-500 border-t-transparent rounded-full"></div>
                    <span class="font-medium">Esperando confirmaciÃ³n...</span>
                </div>
            </div>

            <!-- Instrucciones -->
            <div class="bg-gray-50 rounded-lg p-4 mb-6">
                <h3 class="font-semibold text-gray-700 mb-2">Â¿No ves el email?</h3>
                <ul class="text-sm text-gray-600 space-y-1">
                    <li>â€¢ Revisa tu carpeta de spam o correo no deseado</li>
                    <li>â€¢ Verifica que el email sea correcto</li>
                    <li>â€¢ Puede tardar unos minutos en llegar</li>
                </ul>
                
                <!-- Enlace al diagnÃ³stico -->
                <div class="mt-3 pt-3 border-t border-gray-200">
                    <a href="/email-diagnosis" class="text-blue-600 hover:text-blue-800 text-sm font-medium">
                        ðŸ”§ DiagnÃ³stico de problemas con email â†’
                    </a>
                </div>
            </div>

            <!-- Botones de acciÃ³n -->
            <div class="space-y-4">
                <button id="resend-email" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-4 rounded-lg transition duration-300">
                    Reenviar email de confirmaciÃ³n
                </button>
                
                <a href="/auth" class="block w-full text-center bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium py-3 px-4 rounded-lg transition duration-300">
                    Volver al login
                </a>
            </div>
        </div>

        <!-- Script para comprobar confirmaciÃ³n periÃ³dicamente -->
        <script>
            // FunciÃ³n para comprobar si el usuario ha confirmado su email
            async function checkEmailConfirmation() {
                try {
                    const response = await fetch('/api/auth/check-confirmation', {
                        method: 'GET',
                        credentials: 'include',
                    });
                    
                    if (response.ok) {
                        const data = await response.json();
                        if (data.confirmed) {
                            // Email confirmado, redirigir al perfil
                            window.location.href = '/profile?message=email_confirmed';
                        }
                    }
                } catch (error) {
                    console.log('Error checking confirmation:', error);
                }
            }

            // Comprobar cada 3 segundos
            const checkInterval = setInterval(checkEmailConfirmation, 3000);

            // Parar despuÃ©s de 10 minutos
            setTimeout(() => {
                clearInterval(checkInterval);
            }, 600000);

            // BotÃ³n de reenviar email
            document.getElementById('resend-email')?.addEventListener('click', async () => {
                const button = document.getElementById('resend-email') as HTMLButtonElement;
                if (!button) return;
                
                const originalText = button.textContent || 'Reenviar email';
                button.textContent = 'Enviando...';
                button.disabled = true;

                try {
                    const response = await fetch('/api/auth/resend-confirmation', {
                        method: 'POST',
                        credentials: 'include',
                    });
                    
                    if (response.ok) {
                        button.textContent = 'Â¡Enviado!';
                        button.classList.add('bg-green-600');
                        setTimeout(() => {
                            button.textContent = originalText;
                            button.classList.remove('bg-green-600');
                            button.disabled = false;
                        }, 3000);
                    } else {
                        throw new Error('Error al reenviar');
                    }
                } catch (error) {
                    button.textContent = 'Error al enviar';
                    button.classList.add('bg-red-600');
                    setTimeout(() => {
                        button.textContent = originalText;
                        button.classList.remove('bg-red-600');
                        button.disabled = false;
                    }, 3000);
                }
            });
        </script>
    </AuthLayout>
</Layout>
