---
import Layout from "@/layouts/Layout.astro"
---

<Layout title="San Pepe - La Fiesta Universitaria M√°s Grande de Espa√±a">
    <main class="min-h-screen bg-gradient-to-b from-purple-900 via-blue-900 to-black text-white overflow-x-hidden">
        <!-- Hero Section -->
        <section class="relative h-screen flex items-center justify-center">
            <div class="absolute inset-0 bg-black/50 z-10"></div>
            <img src="/src/assets/san-pepe/escenario-dj.webp" alt="Escenario San Pepe" class="absolute inset-0 w-full h-full object-cover">
            
            <div class="relative z-20 text-center px-4 max-w-6xl mx-auto">
                <h1 class="text-6xl md:text-8xl font-black mb-6 bg-gradient-to-r from-yellow-400 via-pink-500 to-purple-600 bg-clip-text text-transparent animate-gradient-text">
                    SAN PEPE
                </h1>
                <p class="text-2xl md:text-3xl font-bold mb-4 text-yellow-300">
                    LA MAYOR FIESTA UNIVERSITARIA
                </p>
                
                <!-- Countdown Timer -->
                <div id="countdown" class="grid grid-cols-4 gap-2 md:gap-8 mb-8 max-w-4xl mx-auto">
                    <div class="backdrop-blur-sm rounded-xl md:rounded-2xl p-3 md:p-6 transform hover:scale-105 transition-all duration-300">
                        <div id="days" class="text-xl md:text-5xl font-black text-yellow-400 mb-1 md:mb-2">000</div>
                        <div class="text-xs md:text-lg text-gray-300 font-semibold">D√çAS</div>
                    </div>
                    <div class="backdrop-blur-sm rounded-xl md:rounded-2xl p-3 md:p-6 transform hover:scale-105 transition-all duration-300">
                        <div id="hours" class="text-xl md:text-5xl font-black text-yellow-400 mb-1 md:mb-2">00</div>
                        <div class="text-xs md:text-lg text-gray-300 font-semibold">HORAS</div>
                    </div>
                    <div class="backdrop-blur-sm rounded-xl md:rounded-2xl p-3 md:p-6 transform hover:scale-105 transition-all duration-300">
                        <div id="minutes" class="text-xl md:text-5xl font-black text-yellow-400 mb-1 md:mb-2">00</div>
                        <div class="text-xs md:text-lg text-gray-300 font-semibold">MIN</div>
                    </div>
                    <div class="backdrop-blur-sm rounded-xl md:rounded-2xl p-3 md:p-6 transform hover:scale-105 transition-all duration-300">
                        <div id="seconds" class="text-xl md:text-5xl font-black text-yellow-400 mb-1 md:mb-2">00</div>
                        <div class="text-xs md:text-lg text-gray-300 font-semibold">SEG</div>
                    </div>
                </div>
                
                <div class="text-center">
                    <p class="text-xl md:text-2xl font-bold text-yellow-300">
                        18 DE MARZO DE 2026
                    </p>
                </div>
            </div>
        </section>
    </main>

    <style>
        /* Bloquear el scroll completamente */
        html, body {
            overflow: hidden !important;
            height: 100vh !important;
            position: fixed !important;
            width: 100% !important;
        }
        
        /* Asegurar que el main ocupe toda la pantalla */
        main {
            height: 100vh !important;
            overflow: hidden !important;
        }
    </style>

    <script>
        let countdownInterval: ReturnType<typeof setInterval> | undefined;

        // Countdown Timer
        function updateCountdown() {
            // Fecha objetivo: 18 de marzo de 2026 a las 00:00
            const targetDate = new Date('2026-03-18T00:00:00').getTime();
            const now = new Date().getTime();
            const difference = targetDate - now;

            if (difference > 0) {
                // C√°lculos de tiempo
                const days = Math.floor(difference / (1000 * 60 * 60 * 24));
                const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));
                const seconds = Math.floor((difference % (1000 * 60)) / 1000);

                // Actualizar el DOM
                const daysElement = document.getElementById('days');
                const hoursElement = document.getElementById('hours');
                const minutesElement = document.getElementById('minutes');
                const secondsElement = document.getElementById('seconds');

                if (daysElement) daysElement.textContent = days.toString().padStart(3, '0');
                if (hoursElement) hoursElement.textContent = hours.toString().padStart(2, '0');
                if (minutesElement) minutesElement.textContent = minutes.toString().padStart(2, '0');
                if (secondsElement) secondsElement.textContent = seconds.toString().padStart(2, '0');

                // Efecto de parpadeo en los segundos
                if (secondsElement) {
                    secondsElement.style.animation = 'pulse 1s ease-in-out';
                    setTimeout(() => {
                        if (secondsElement) {
                            secondsElement.style.animation = '';
                        }
                    }, 500);
                }
            } else {
                // Si ya pas√≥ la fecha, mostrar que el evento ha comenzado
                const allElements = document.querySelectorAll('#countdown > div > div:first-child');
                allElements.forEach(element => {
                    element.textContent = 'üéâ';
                });
                
                const labels = document.querySelectorAll('#countdown > div > div:last-child');
                labels.forEach(element => {
                    element.textContent = '¬°YA EST√Å AQU√ç!';
                });
            }
        }

        function initializeCountdown() {
            // Limpiar interval anterior si existe
            if (countdownInterval) {
                clearInterval(countdownInterval);
            }
            
            // Actualizar inmediatamente y luego cada segundo
            updateCountdown();
            countdownInterval = setInterval(updateCountdown, 1000);
        }

        function initializeHoverEffects() {
            const countdownBoxes = document.querySelectorAll('#countdown > div');
            
            countdownBoxes.forEach(box => {
                box.addEventListener('mouseenter', function(this: HTMLElement) {
                    this.style.transform = 'scale(1.1) rotate(2deg)';
                    this.style.boxShadow = '0 20px 40px rgba(139, 92, 246, 0.3)';
                });
                
                box.addEventListener('mouseleave', function(this: HTMLElement) {
                    this.style.transform = 'scale(1) rotate(0deg)';
                    this.style.boxShadow = '';
                });
            });
        }

        // Funci√≥n principal de inicializaci√≥n
        function init() {
            initializeCountdown();
            initializeHoverEffects();
        }

        // Inicializar en diferentes eventos para asegurar compatibilidad con view transitions
        document.addEventListener('DOMContentLoaded', init);
        document.addEventListener('astro:page-load', init);
        
        // Tambi√©n ejecutar inmediatamente por si el DOM ya est√° listo
        if (document.readyState === 'loading') {
            // DOM a√∫n no est√° listo, esperar
        } else {
            // DOM ya est√° listo, ejecutar inmediatamente
            init();
        }

        // Limpiar interval cuando la p√°gina se va a cambiar
        document.addEventListener('astro:before-preparation', function() {
            if (countdownInterval) {
                clearInterval(countdownInterval);
            }
        });
    </script>
</Layout>