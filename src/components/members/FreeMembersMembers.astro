---
// Server Island para los Miembros Libres DAI
import { supabase } from "../../lib/supabase";
import MemberCard from "./memberCard.astro";

type Member = {
    id: string;
    name: string;
    full_name: string;
    avatar_url: string;
    role_id: string;
    role_name: string;
    email?: string;
    x?: string;
    linkedin?: string;
    tiktok?: string;
    instagram?: string;
    commissions: string[];
};

let freeMembers: Member[] = [];
let error = null;

try {
    const { data: free_members_data, error: dbError } = await supabase
        .from('dai_free_members_users')
        .select('*');
    
    if (dbError) throw dbError;
    
    freeMembers = free_members_data || [];
    //console.log('üóÑÔ∏è Datos obtenidos de la base de datos para Miembros Libres:', freeMembers);
} catch (e) {
    error = e;
}
---

{error && (
    <div class="text-center text-red-400 p-4">
        <p>Error al cargar los miembros libres</p>
        <p class="text-sm text-white/60">Intenta recargar la p√°gina</p>
    </div>
)}

{!error && (
    <div class="flex flex-row flex-wrap justify-center gap-2">
        {freeMembers.map(member => (
            <MemberCard 
                key={member.id} 
                name={member.name || member.full_name} 
                avatarUrl={member.avatar_url} 
                role={member.role_name.endsWith(' - DAI') ? member.role_name.slice(0, -6) : member.role_name}
                email={member.email} 
                x={member.x} 
                linkedin={member.linkedin} 
                tiktok={member.tiktok} 
                instagram={member.instagram}
                commissions={member.commissions} 
            />
        ))}
    </div>
)}
