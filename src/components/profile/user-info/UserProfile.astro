---
// Componente para mostrar el perfil del usuario con capacidad de edición

import EditIcon from "@/assets/icons/edit.svg";
import UserIcon from "@/assets/icons/user.svg";
import MailIcon from "@/assets/icons/mail.svg";
import IDIcon from "@/assets/icons/id.svg";
import PhoneIcon from "@/assets/icons/phone.svg";
import InstagramIcon from "@/assets/social/instagram.svg";
import LinkedInIcon from "@/assets/social/linkedin.svg";
import TikTokIcon from "@/assets/social/tiktok.svg";
import XIcon from "@/assets/social/x.svg";
import { supabase } from "@/lib/supabase";

interface Props {
    user: any;
    roleNames?: string[];
}

const { user, roleNames = [] } = Astro.props;

// Obtener datos completos del usuario desde la tabla users
let userData = null;
if (user?.id) {
    try {
        const { data, error } = await supabase
            .from('users')
            .select('full_name, dni, phone, instagram, linkedin, tiktok, x')
            .eq('id', user.id)
            .single();
        
        if (!error && data) {
            userData = data;
        }
    } catch (err) {
        console.error('Error obteniendo datos del usuario:', err);
    }
}

// Usar datos de la tabla users si están disponibles, sino fallback a user_metadata
const name = userData?.full_name || user?.user_metadata?.full_name || user?.user_metadata?.name || 'No disponible';
const email = user?.email || user?.user_metadata?.email;
const dni = userData?.dni || user?.user_metadata?.dni;
const phone = userData?.phone || user?.user_metadata?.phone;
const instagram = userData?.instagram || user?.user_metadata?.instagram;
const linkedin = userData?.linkedin || user?.user_metadata?.linkedin;
const tiktok = userData?.tiktok || user?.user_metadata?.tiktok;
const x = userData?.x || user?.user_metadata?.x;
---

<div class="bg-white/5 border border-white/20 rounded-xl p-3 sm:p-4 justify-between h-full flex flex-col row-span-2 col-span-1 sm:col-span-2">
    <div>
        <div class="space-y-2 grid grid-cols-1 sm:grid-cols-5 gap-4 sm:gap-6">
            <div class="col-span-1 sm:col-span-2">
                <h4 class="text-azul-brillante font-bold text-mid mb-3">Información Personal:</h4>
                <div class="space-y-2">
                    <div class="flex gap-2 items-center group hover:bg-white/5 rounded-lg p-2 -mx-2 transition-all">
                        <UserIcon class="w-5 h-5 text-white" />
                        <span class="text-gray-300 text-xs w-16">Nombre:</span>
                        <span class="text-white text-sm group-hover:text-azul-brillante transition-colors flex-1 cursor-pointer"
                            data-field="full_name" data-value={name}>{name}</span>
                        <EditIcon class="w-5 h-5 text-gray-400 group-hover:text-azul-brillante transition-colors cursor-pointer"
                                data-field="full_name" data-value={name} />
                    </div>
                    <div class="flex gap-2 items-center group hover:bg-white/5 rounded-lg p-2 -mx-2 transition-all">
                        <MailIcon class="w-5 h-5 text-white" />
                        <span class="text-gray-300 text-xs w-16 ">Email:</span>
                        <span class="text-white text-sm flex-1 group-hover:text-azul-brillante">{email}</span>
                    </div>
                    <div class="flex gap-2 items-center group hover:bg-white/5 rounded-lg p-2 -mx-2 transition-all">
                        <IDIcon class="w-5 h-5 text-white" />
                        <span class="text-gray-300 text-xs w-16">DNI/NIE:</span>
                        <span class="text-white text-sm group-hover:text-azul-brillante transition-colors flex-1"
                            data-value={dni}>{dni || 'No configurado'}</span>
                    </div>
                    <div class="flex gap-2 items-center group hover:bg-white/5 rounded-lg p-2 -mx-2 transition-all">
                        <PhoneIcon class="w-5 h-5 text-white" />
                        <span class="text-gray-300 text-xs w-16">Teléfono:</span>
                        <span class="text-white text-sm group-hover:text-azul-brillante transition-colors flex-1 cursor-pointer"
                            data-field="phone" data-value={phone}>{phone || 'No configurado'}</span>
                        <EditIcon class="w-5 h-5 text-gray-400 group-hover:text-azul-brillante transition-colors cursor-pointer"
                                data-field="phone" data-value={phone} />
                    </div>
                </div>
            </div>
            <div class="col-span-1 sm:col-span-2">
                <h4 class="text-azul-brillante font-bold text-mid mb-3">Redes Sociales:</h4>
                <div class="space-y-2">
                    <div class="flex gap-2 items-center group hover:bg-white/5 rounded-lg p-2 -mx-2 transition-all">
                        {instagram ? (
                            <a href={`https://instagram.com/${instagram}`} 
                            target="_blank" 
                            rel="noopener noreferrer" 
                            class="hover:scale-110 transition-transform"
                            onclick="event.stopPropagation()">
                                <InstagramIcon class="w-5 h-5 text-white hover:text-azul-brillante" />
                            </a>
                        ) : (
                            <InstagramIcon class="w-5 h-5 text-white/50" />
                        )}
                        <span class="text-gray-300 text-xs">Instagram:</span>
                        <span class="text-white text-sm group-hover:text-azul-brillante transition-colors flex-1 cursor-pointer"
                            data-field="instagram" data-value={instagram}>
                            {instagram ? (
                                <span class="hover:text-azul-brillante transition-colors">
                                    @{instagram}
                                </span>
                            ) : 'No configurado'}
                        </span>
                        <EditIcon class="w-5 h-5 text-gray-400 group-hover:text-azul-brillante transition-colors cursor-pointer"
                                data-field="instagram" data-value={instagram} />
                    </div>
                    <div class="flex gap-2 items-center group hover:bg-white/5 rounded-lg p-2 -mx-2 transition-all">
                        {linkedin ? (
                            <a href={linkedin.startsWith('http') ? linkedin : `https://${linkedin}`} 
                            target="_blank" 
                            rel="noopener noreferrer" 
                            class="hover:scale-110 transition-transform"
                            onclick="event.stopPropagation()">
                                <LinkedInIcon class="w-5 h-5 text-white hover:text-azul-brillante" />
                            </a>
                        ) : (
                            <LinkedInIcon class="w-5 h-5 text-white/50" />
                        )}
                        <span class="text-gray-300 text-xs">LinkedIn:</span>
                        <span class="text-white text-sm group-hover:text-azul-brillante transition-colors flex-1 cursor-pointer break-all"
                            data-field="linkedin" data-value={linkedin}>
                            {linkedin ? (
                                <span class="hover:text-azul-brillante transition-colors">
                                    {linkedin.replace(/^https?:\/\//, '').replace(/^(www\.)?linkedin\.com\/in\//, '')}
                                </span>
                            ) : 'No configurado'}
                        </span>
                        <EditIcon class="w-5 h-5 text-gray-400 group-hover:text-azul-brillante transition-colors cursor-pointer"
                                data-field="linkedin" data-value={linkedin} />
                    </div>
                    <div class="flex gap-2 items-center group hover:bg-white/5 rounded-lg p-2 -mx-2 transition-all">
                        {tiktok ? (
                            <a href={`https://tiktok.com/@${tiktok}`} 
                            target="_blank" 
                            rel="noopener noreferrer" 
                            class="hover:scale-110 transition-transform"
                            onclick="event.stopPropagation()">
                                <TikTokIcon class="w-5 h-5 text-white hover:text-azul-brillante" />
                            </a>
                        ) : (
                            <TikTokIcon class="w-5 h-5 text-white/50" />
                        )}
                        <span class="text-gray-300 text-xs">TikTok:</span>
                        <span class="text-white text-sm group-hover:text-azul-brillante transition-colors flex-1 cursor-pointer"
                            data-field="tiktok" data-value={tiktok}>
                            {tiktok ? (
                                <span class="hover:text-azul-brillante transition-colors">
                                    @{tiktok}
                                </span>
                            ) : 'No configurado'}
                        </span>
                        <EditIcon class="w-5 h-5 text-gray-400 group-hover:text-azul-brillante transition-colors cursor-pointer"
                                data-field="tiktok" data-value={tiktok} />
                    </div>
                    <div class="flex gap-2 items-center group hover:bg-white/5 rounded-lg p-2 -mx-2 transition-all">
                        {x ? (
                            <a href={`https://x.com/${x}`} 
                            target="_blank" 
                            rel="noopener noreferrer" 
                            class="hover:scale-110 transition-transform"
                            onclick="event.stopPropagation()">
                                <XIcon class="w-5 h-5 text-white hover:text-azul-brillante" />
                            </a>
                        ) : (
                            <XIcon class="w-5 h-5 text-white/50" />
                        )}
                        <span class="text-gray-300 text-xs">X (Twitter):</span>
                        <span class="text-white text-sm group-hover:text-azul-brillante transition-colors flex-1 cursor-pointer"
                            data-field="x" data-value={x}>
                            {x ? (
                                <span class="hover:text-azul-brillante transition-colors">
                                    @{x}
                                </span>
                            ) : 'No configurado'}
                        </span>
                        <EditIcon class="w-5 h-5 text-gray-400 group-hover:text-azul-brillante transition-colors cursor-pointer"
                                data-field="x" data-value={x} />
                    </div>
                </div>
            </div>
            <div class="col-span-1 sm:col-span-1">
                <h4 class="text-azul-brillante font-bold text-mid mb-3">Roles:</h4>
                <div class="space-y-2 flex flex-wrap sm:flex-col gap-2 sm:gap-0 sm:space-y-2">
                    {roleNames.length > 0 ? (
                        roleNames.map(role => (
                            <div class="flex items-center">
                                <span class="inline-flex px-3 py-1 text-xs font-medium text-azul-brillante bg-dai/25 rounded-md">
                                    {role}
                                </span>
                            </div>
                        ))
                    ) : (
                        <div class="flex items-center p-2 rounded-lg">
                            <span class="text-gray-400 text-sm">Sin roles asignados</span>
                        </div>
                    )}
                </div>
            </div>
        </div>
    </div>
</div>

<script type="module">
    // Función para mostrar mensajes
    function showMessage(text, type) {
        const message = document.createElement('div');
        message.className = `fixed top-4 right-4 px-4 py-2 rounded-lg text-white z-50 ${
            type === 'success' ? 'bg-green-500/50' : 'bg-red-500/50'
        }`;
        message.textContent = text;
        
        document.body.appendChild(message);
        
        setTimeout(() => {
            message.remove();
        }, 3000);
    }
</script>