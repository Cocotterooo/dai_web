---
// Wrapper para UserStats que maneja errores de manera segura
import UserStats from "./user-info/user-info.astro";
import UserStatsSkeleton from "../ui/skeletons/UserStatsSkeleton.astro";

const user = Astro.props.user;
let hasError = false;
let errorMessage = '';

// Verificar que tenemos los datos mínimos necesarios
if (!user) {
    hasError = true;
    errorMessage = 'Usuario no disponible para estadísticas';
}
---

<div class="col-span-10 md:col-span-4 lg:col-span-6 xl:col-span-7 h-full">
{hasError ? (
    <div>
        <UserStatsSkeleton />
        <script define:vars={{ errorMessage }}>
            console.warn('UserStats: Mostrando skeleton debido a:', errorMessage);
        </script>
    </div>
) : (
    <div class="user-stats-wrapper">
        <UserStats user={user} />
        <script>
            // Manejo de errores del lado del cliente
            document.addEventListener('DOMContentLoaded', () => {
                const wrapper = document.querySelector('.user-stats-wrapper');
                if (wrapper) {
                    // Verificar si el componente se renderizó correctamente
                    const content = wrapper.innerHTML.trim();
                    if (!content || content.includes('error') || content.includes('failed')) {
                        console.warn('UserStats: Detectado problema en renderizado');
                        
                        // Cargar estadísticas de forma asíncrona
                        fetch('/api/profile/user-stats')
                            .then(response => response.json())
                            .then(data => {
                                if (data.error) {
                                    throw new Error(data.error);
                                }
                                // Actualizar estadísticas si es necesario
                            })
                            .catch(error => {
                                console.error('Error cargando estadísticas:', error);
                                // Mantener skeleton visible
                            });
                    }
                }
            });
        </script>
    </div>
)}
</div>

<template data-fallback>
    <UserStatsSkeleton />
</template>
