---
// Componente de las pestañas de navegación
---

<div class="flex justify-center mb-8">

  <div id="auth-tabs-button" class="flex gap-5 font-medium bg-color-azul-oscuro border border-dai/30 h-fit w-fit rounded-xl py-2 px-2 items-center relative scale-80 sm:scale-100">
      <div
          id="auth-backdrop"
          class="-z-10 rounded absolute bg-dai/20
          translate-x-(--left) translate-y-(--top)
          h-(--height) w-(--width)
          transition-all duration-200 
          ease-in-out left-0 top-0">
      </div>
      <ul class="flex flex-row items-center text-white">
          <li>
              <button id="tab-login" class="relative z-10 py-1 px-4 cursor-pointer hover:text-dai transition-colors duration-400">
                  <span>Iniciar Sesión</span>
              </button>
          </li>
          <li>
              <button id="tab-register" class="relative z-10 py-1 px-4 cursor-pointer hover:text-dai transition-colors duration-400">
                  <span>Registrarse</span>
              </button>
          </li>
      </ul>
  </div>
</div>

<script type="module" is:inline>

document.addEventListener('DOMContentLoaded', () => {
    const tabLogin = document.querySelector('#tab-login')
    const tabRegister = document.querySelector('#tab-register')
    const authBackdrop = document.querySelector('#auth-backdrop')

    // Inicializa el backdrop con el botón de Industriales
    const initicializeBackdrop = (button) => {
        const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = button
        authBackdrop.style.setProperty('--left', `${offsetLeft}px`)
        authBackdrop.style.setProperty('--top', `${offsetTop}px`)
        authBackdrop.style.setProperty('--width', `${offsetWidth}px`)
        authBackdrop.style.setProperty('--height', `${offsetHeight}px`)
    }

    // Function to update the backdrop position and size
    const updateBackdrop = (button) => {
        const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = button
        authBackdrop.style.setProperty('--left', `${offsetLeft}px`)
        authBackdrop.style.setProperty('--top', `${offsetTop}px`)
        authBackdrop.style.setProperty('--width', `${offsetWidth}px`)
        authBackdrop.style.setProperty('--height', `${offsetHeight}px`)
    }

    // Estado inicial: Login
    // Esto asegura que al cargar la página, el backdrop y la tabla de login estén visibles
    if (tabLogin) {
        initicializeBackdrop(tabLogin)
    }

    tabLogin.addEventListener('click', () => {
        updateBackdrop(tabLogin)
    })

    tabRegister.addEventListener('click', () => {
        updateBackdrop(tabRegister)
    })
    });
</script>